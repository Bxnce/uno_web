# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                            controllers.HomeController.home()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                controllers.Assets.versioned(path="/public", file: Asset)

GET     /about                       controllers.HomeController.about()

# Controlling the game via the controller and GET requests, POST doesn't display the returned HTML. 

GET     /game/setup                        controllers.HomeController.setup()

GET     /game/start/:name1/:name2 	       controllers.HomeController.createGame(name1: String, name2:String)
+nocsrf
POST    /game/next                         controllers.HomeController.nextPlayer()
+nocsrf
POST    /game/place/:i                     controllers.HomeController.placeCard(i: Int)
+nocsrf
POST     /game/take                        controllers.HomeController.takeCard()
+noscrf
POST     /game/json                        controllers.HomeController.retJson()

GET     /game_mult/setup_multiplayer       controllers.HomeController.setup_multiplayer()

GET     /game_mult/prejoin                 controllers.HomeController.getToJoin()

GET     /game_mult/join/:hash/:name        controllers.HomeController.join(hash: String, name: String)

GET     /game_mult/cc/:hash/:name          controllers.HomeController.createController(hash: String, name: String)
+nocsrf
POST    /game_mult/next/:hash              controllers.HomeController.nextPlayerMult(hash: String)
+nocsrf
POST    /game_mult/place/:i/:hash          controllers.HomeController.placeCardMult(i: Int, hash: String)
+nocsrf
POST     /game_mult/take/:hash             controllers.HomeController.takeCardMult(hash: String)



# websocket
GET     /ws/:hash                          controllers.HomeController.socket(hash:String)


# ERROR routing
GET     /notfound            controllers.HomeController.notFound()
GET     /badrequest/         controllers.HomeController.badRequest(message: String)